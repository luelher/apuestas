<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Vendedor', 'doctrine');

/**
 * BaseVendedor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $codven
 * @property string $logven
 * @property string $pasven
 * @property string $desven
 * @property string $dirven
 * @property string $telven
 * @property string $celven
 * @property string $codban
 * @property string $numcue
 * @property string $emaven
 * @property string $staven
 * @property string $titcue
 * @property string $cedven
 * @property string $tipcue
 * @property Doctrine_Collection $Quiniela
 * 
 * @method string              getCodven()   Returns the current record's "codven" value
 * @method string              getLogven()   Returns the current record's "logven" value
 * @method string              getPasven()   Returns the current record's "pasven" value
 * @method string              getDesven()   Returns the current record's "desven" value
 * @method string              getDirven()   Returns the current record's "dirven" value
 * @method string              getTelven()   Returns the current record's "telven" value
 * @method string              getCelven()   Returns the current record's "celven" value
 * @method string              getCodban()   Returns the current record's "codban" value
 * @method string              getNumcue()   Returns the current record's "numcue" value
 * @method string              getEmaven()   Returns the current record's "emaven" value
 * @method string              getStaven()   Returns the current record's "staven" value
 * @method string              getTitcue()   Returns the current record's "titcue" value
 * @method string              getCedven()   Returns the current record's "cedven" value
 * @method string              getTipcue()   Returns the current record's "tipcue" value
 * @method Doctrine_Collection getQuiniela() Returns the current record's "Quiniela" collection
 * @method Vendedor            setCodven()   Sets the current record's "codven" value
 * @method Vendedor            setLogven()   Sets the current record's "logven" value
 * @method Vendedor            setPasven()   Sets the current record's "pasven" value
 * @method Vendedor            setDesven()   Sets the current record's "desven" value
 * @method Vendedor            setDirven()   Sets the current record's "dirven" value
 * @method Vendedor            setTelven()   Sets the current record's "telven" value
 * @method Vendedor            setCelven()   Sets the current record's "celven" value
 * @method Vendedor            setCodban()   Sets the current record's "codban" value
 * @method Vendedor            setNumcue()   Sets the current record's "numcue" value
 * @method Vendedor            setEmaven()   Sets the current record's "emaven" value
 * @method Vendedor            setStaven()   Sets the current record's "staven" value
 * @method Vendedor            setTitcue()   Sets the current record's "titcue" value
 * @method Vendedor            setCedven()   Sets the current record's "cedven" value
 * @method Vendedor            setTipcue()   Sets the current record's "tipcue" value
 * @method Vendedor            setQuiniela() Sets the current record's "Quiniela" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseVendedor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('vendedor');
        $this->hasColumn('codven', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'seq_vendedor',
             'length' => '',
             ));
        $this->hasColumn('logven', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('pasven', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('desven', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('dirven', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('telven', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('celven', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('codban', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('numcue', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('emaven', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('staven', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('titcue', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('cedven', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('tipcue', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Quiniela', array(
             'local' => 'codven',
             'foreign' => 'codven'));
    }
}