<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Deposito', 'doctrine');

/**
 * BaseDeposito
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $coddep
 * @property string $numdep
 * @property timestamp $fecdep
 * @property decimal $mondep
 * @property string $nomdep
 * @property integer $ceddep
 * @property string $codusu
 * @property string $tipdep
 * @property string $stadep
 * @property integer $codban
 * @property Banco $Banco
 * @property Usuarios $Usuarios
 * @property DepositoQuiniela $DepositoQuiniela
 * 
 * @method integer          getCoddep()           Returns the current record's "coddep" value
 * @method string           getNumdep()           Returns the current record's "numdep" value
 * @method timestamp        getFecdep()           Returns the current record's "fecdep" value
 * @method decimal          getMondep()           Returns the current record's "mondep" value
 * @method string           getNomdep()           Returns the current record's "nomdep" value
 * @method integer          getCeddep()           Returns the current record's "ceddep" value
 * @method string           getCodusu()           Returns the current record's "codusu" value
 * @method string           getTipdep()           Returns the current record's "tipdep" value
 * @method string           getStadep()           Returns the current record's "stadep" value
 * @method integer          getCodban()           Returns the current record's "codban" value
 * @method Banco            getBanco()            Returns the current record's "Banco" value
 * @method Usuarios         getUsuarios()         Returns the current record's "Usuarios" value
 * @method DepositoQuiniela getDepositoQuiniela() Returns the current record's "DepositoQuiniela" value
 * @method Deposito         setCoddep()           Sets the current record's "coddep" value
 * @method Deposito         setNumdep()           Sets the current record's "numdep" value
 * @method Deposito         setFecdep()           Sets the current record's "fecdep" value
 * @method Deposito         setMondep()           Sets the current record's "mondep" value
 * @method Deposito         setNomdep()           Sets the current record's "nomdep" value
 * @method Deposito         setCeddep()           Sets the current record's "ceddep" value
 * @method Deposito         setCodusu()           Sets the current record's "codusu" value
 * @method Deposito         setTipdep()           Sets the current record's "tipdep" value
 * @method Deposito         setStadep()           Sets the current record's "stadep" value
 * @method Deposito         setCodban()           Sets the current record's "codban" value
 * @method Deposito         setBanco()            Sets the current record's "Banco" value
 * @method Deposito         setUsuarios()         Sets the current record's "Usuarios" value
 * @method Deposito         setDepositoQuiniela() Sets the current record's "DepositoQuiniela" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseDeposito extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('deposito');
        $this->hasColumn('coddep', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'deposito_coddep',
             'length' => '4',
             ));
        $this->hasColumn('numdep', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('fecdep', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '25',
             ));
        $this->hasColumn('mondep', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => '0',
             'primary' => false,
             'length' => '18',
             ));
        $this->hasColumn('nomdep', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('ceddep', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '4',
             ));
        $this->hasColumn('codusu', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('tipdep', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('stadep', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('codban', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Banco', array(
             'local' => 'codban',
             'foreign' => 'codban'));

        $this->hasOne('Usuarios', array(
             'local' => 'codusu',
             'foreign' => 'codusu'));

        $this->hasOne('DepositoQuiniela', array(
             'local' => 'coddep',
             'foreign' => 'coddep'));
    }
}